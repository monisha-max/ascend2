// require('dotenv').config();
// const express = require('express');
// const mongoose = require('mongoose');
// const bcrypt = require('bcrypt');
// const app = express();
// const PORT = 3000;
// const dbName = 'TaxCollecter'; // Update this with your database name

// // Connect to MongoDB Atlas
// console.log(`Server start}`);
// mongoose.connect(`mongodb+srv://monishakollipara13:lQCoLu5hP6mIuaoj@cluster0.viy9cup.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0`);
// const userSchema = new mongoose.Schema({
//     username: String,
//     password: String
// });

// console.log(`Mongo connect`);

// const User = mongoose.model('users', userSchema);

// console.log(`Mongo model`);

// app.use(express.json());
// app.use(express.static('public'));

// console.log(`Before login}`);

// app.get('/login', (req, res) => {
//     res.send(`
//       <form action="/login" method="post">
//       <input type="radio" name="userType" value="new" id="newUser" checked>New User 1<br>
//       <input type="radio" name="userType" value="existing" id="existingUser">Existing User<br>
//       <input type="text" id="username" placeholder="Username" required>
//       <input type="password" id="password" placeholder="Password" required>
//       <button type="submit">Submit</button>
//   </form>
//     `);
//   });

// app.post('/login', async (req, res) => {
//     console.log(`Inside  login}`);
//     console.log(req.body);
//     const { userType, username, password } = req.body;
//     if (userType === 'new') {
//         const existingUser = await User.findOne({ username });
//         if (existingUser) {
//             return res.status(400).send({ message: 'Username is already taken' });
//         }
//         const hashedPassword = await bcrypt.hash(password, 10);
//         const user = new User({ username, password: hashedPassword });
//         await user.save();
//         res.send({ message: 'User registered successfully' });
//     } else {
//         const user = await User.findOne({ username });
//         if (user && await bcrypt.compare(password, user.password)) {
//             res.send({ message: 'Login successful' });
//         } else {
//             res.send({ message: 'Invalid credentials' });
//         }
//     }
// });
// app.get('/', (req, res) => {
//     res.sendFile('login.html', { root: __dirname });
// });
// app.listen(PORT, () => {
//     console.log(`Server running on http://localhost:${PORT}`);
// });



// require('dotenv').config();
// const express = require('express');
// const mongoose = require('mongoose');
// const bcrypt = require('bcrypt');
// const app = express();
// const PORT = 3000;
// const dbName = 'TaxCollecter'; // Update this with your database name

// // Environment variables for security
// const mongoUri = process.env.MONGO_URI;

// // Connect to MongoDB Atlas
// console.log('Server start');
// mongoose.connect(mongoUri);

// const userSchema = new mongoose.Schema({
//     username: String,
//     password: String
// });

// console.log('Mongo connect');

// const User = mongoose.model('users', userSchema);

// console.log('Mongo model');

// app.use(express.json());
// app.use(express.urlencoded({ extended: true })); // <-- Added this line
// app.use(express.static('public'));

// console.log('Before login');

// app.get('/login', (req, res) => {
//     res.send(`
//       <form action="/login" method="post">
//         <input type="radio" name="userType" value="new" id="newUser" checked>New User<br>
//         <input type="radio" name="userType" value="existing" id="existingUser">Existing User<br>
//         <input type="text" name="username" id="username" placeholder="Username" required> <!-- Added name attribute -->
//         <input type="password" name="password" id="password" placeholder="Password" required> <!-- Added name attribute -->
//         <button type="submit">Submit</button>
//       </form>
//     `);
// });
// app.post('/login', async (req, res) => {
//     console.log(`Inside  login}`);
//     console.log(req.body);
//     const { userType, username, password } = req.body;
//     if (userType === 'new') {
//         const existingUser = await User.findOne({ username });
//         if (existingUser) {
//             return res.status(400).send({ message: 'Username is already taken' });
//         }
//         const hashedPassword = await bcrypt.hash(password, 10);
//         const user = new User({ username, password: hashedPassword });
//         await user.save();
//         res.send({ message: 'User registered successfully' });
//     } else {
//         const user = await User.findOne({ username });
//         if (user && await bcrypt.compare(password, user.password)) {
//             res.send({ message: 'Login successful' });
//         } else {
//             res.send({ message: 'Invalid credentials' });
//         }
//     }
// });
// app.get('/', (req, res) => {
//     res.sendFile('login.html', { root: __dirname });
// });
// app.listen(PORT, () => {
//     console.log(`Server running on http://localhost:${PORT}`);
// });